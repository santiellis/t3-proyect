import { type NextPage } from "next";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";

import { RouterOutputs, api } from "~/utils/api";



const CreatePostWizard = () => {

  const { user } = useUser();

  if (!user) return null;

  return (
  <div className="flex gap-3 w-full">
    <img src={user.profileImageUrl} alt="Profile Image" className="w-14 h-14 rounded-full"/>
    <input placeholder="Type something!" className="bg-transparent grow outline-none"/>
  </div>
  );

};


type PostWithUser = RouterOutputs["post"]["getAll"][number]

const PostView = (props:PostWithUser) =>{
const {post, author} = props
return (
  <div className="flex flex-col">
<div className="p-4 gap-3 border-b border-slate-400 flex" key={post.id}>
  <img src={author.profileImageUrl} alt="Profile Image" className="w-14 h-14 rounded-full" />
  <div className="flex flex-col">
    <div className="flex text-slate-300">
      <span>{`@${author.username}`}</span>
      </div>
  <span>
  {post.content}
  </span>
  </div>
  </div>
</div>
)

}; 

const Home: NextPage = () => {

  const user = useUser();

  const {data, isLoading} = api.post.getAll.useQuery(); 

  if (isLoading) return <div>Loading...</div>

  if (!data) return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
      <div className="border-b border-slate-400 p-4">
        {!user.isSignedIn && <div className="flex justify-center"><SignInButton/></div>}
        {user.isSignedIn && <CreatePostWizard/>}
    </div>
      <div className="flex flex-col">
        {[...data, ...data]?.map((fullPost) => (<PostView {...fullPost} key={fullPost.post.id}/>))}
      </div>
        </div>
      <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
      </main>
    </>
  );
};

export default Home;
